{
  "project": "barton-outreach-core",
  "version": "1.0.0",
  "description": "Composio MCP Task Registry for Schema Finalization",
  "created": "2025-10-23",
  "tasks": [
    {
      "id": "verify_neon_dependencies",
      "type": "sql",
      "priority": 1,
      "description": "Verify that Neon contains required base tables before shq views can be applied",
      "validation": {
        "required_tables": [
          "intake.audit_log",
          "intake.raw_loads",
          "vault.contacts"
        ],
        "required_schemas": ["intake", "vault", "shq"]
      },
      "output": "verification_result",
      "execution": {
        "composio_action": "neon_query",
        "query_template": "SELECT schema_name, table_name FROM information_schema.tables WHERE table_schema IN ('intake', 'vault', 'shq')"
      }
    },
    {
      "id": "apply_shq_views",
      "type": "migration",
      "priority": 2,
      "file": "ctb/data/migrations/outreach-process-manager/fixes/2025-10-23_create_shq_views.sql",
      "description": "Create shq.audit_log and shq.validation_queue views if dependencies are satisfied",
      "depends_on": ["verify_neon_dependencies"],
      "status": "file_exists",
      "validation": {
        "pre_check": "verify_neon_dependencies must pass",
        "post_check": "SELECT COUNT(*) FROM pg_views WHERE schemaname = 'shq'"
      }
    },
    {
      "id": "alias_people_master",
      "type": "migration",
      "priority": 3,
      "file": "ctb/data/migrations/outreach-process-manager/fixes/2025-10-23_fix_people_master_column_alias.sql",
      "description": "Create safe alias for people_master.unique_id → people_unique_id",
      "depends_on": [],
      "status": "file_exists",
      "validation": {
        "post_check": "SELECT column_name FROM information_schema.columns WHERE table_schema = 'people' AND table_name = 'master' AND column_name = 'people_unique_id'"
      }
    },
    {
      "id": "introspect_schema",
      "type": "script",
      "priority": 4,
      "file": "ctb/ai/scripts/introspect_neon_to_manifest.cjs",
      "output": "ctb/data/infra/NEON_SCHEMA_MANIFEST.yaml",
      "description": "Extract live Neon schema and generate doctrine manifest",
      "depends_on": ["apply_shq_views", "alias_people_master"],
      "status": "file_ready",
      "execution": {
        "command": "node",
        "args": ["ctb/ai/scripts/introspect_neon_to_manifest.cjs"],
        "env": ["DATABASE_URL"]
      },
      "validation": {
        "output_exists": true,
        "output_format": "yaml",
        "required_sections": ["schemas", "tables", "views", "functions"]
      }
    },
    {
      "id": "verify_schema_alignment",
      "type": "script",
      "priority": 5,
      "file": "ctb/ai/scripts/verify_schema_alignment.cjs",
      "output": "ctb/data/infra/SCHEMA_DRIFT_REPORT.md",
      "description": "Compare live Neon schema vs manifest and report drift",
      "depends_on": ["introspect_schema"],
      "status": "file_ready",
      "execution": {
        "command": "node",
        "args": ["ctb/ai/scripts/verify_schema_alignment.cjs"],
        "env": ["DATABASE_URL"]
      },
      "validation": {
        "output_exists": true,
        "output_format": "markdown",
        "drift_threshold": 0
      }
    },
    {
      "id": "generate_firestore_schema",
      "type": "script",
      "priority": 6,
      "file": "ctb/ai/scripts/generate_firestore_schema.js",
      "output": "ctb/data/infra/FIRESTORE_SCHEMA.json",
      "description": "Generate Firestore schema mirror from Neon manifest",
      "depends_on": ["introspect_schema"],
      "status": "file_ready",
      "execution": {
        "command": "node",
        "args": ["ctb/ai/scripts/generate_firestore_schema.js"],
        "input": "ctb/data/infra/NEON_SCHEMA_MANIFEST.yaml"
      },
      "validation": {
        "output_exists": true,
        "output_format": "json"
      }
    },
    {
      "id": "generate_amplify_schema",
      "type": "script",
      "priority": 7,
      "file": "ctb/ai/scripts/neon_to_amplify_schema.js",
      "output": "ctb/data/infra/AMPLIFY_TYPES.graphql",
      "description": "Generate Amplify GraphQL types from Neon manifest",
      "depends_on": ["introspect_schema"],
      "status": "file_ready",
      "execution": {
        "command": "node",
        "args": ["ctb/ai/scripts/neon_to_amplify_schema.js"],
        "input": "ctb/data/infra/NEON_SCHEMA_MANIFEST.yaml"
      },
      "validation": {
        "output_exists": true,
        "output_format": "graphql"
      }
    },
    {
      "id": "verify_postfix",
      "type": "script",
      "priority": 8,
      "file": "ctb/ai/scripts/run_post_fix_verification.cjs",
      "description": "Run end-to-end manifest and drift check after all fixes applied",
      "depends_on": [
        "verify_schema_alignment",
        "generate_firestore_schema",
        "generate_amplify_schema"
      ],
      "status": "file_ready",
      "execution": {
        "command": "node",
        "args": ["ctb/ai/scripts/run_post_fix_verification.cjs"],
        "env": ["DATABASE_URL"]
      },
      "validation": {
        "all_tasks_completed": true,
        "no_drift_detected": true,
        "all_outputs_generated": true
      }
    }
  ],
  "execution_order": [
    "verify_neon_dependencies",
    "apply_shq_views",
    "alias_people_master",
    "introspect_schema",
    "verify_schema_alignment",
    "generate_firestore_schema",
    "generate_amplify_schema",
    "verify_postfix"
  ],
  "composio_config": {
    "app_name": "barton-outreach-core",
    "integration": "neon",
    "authentication": "env_DATABASE_URL",
    "retry_policy": {
      "max_attempts": 3,
      "backoff": "exponential"
    },
    "logging": {
      "level": "info",
      "output": "ctb/ai/mcp-tasks/execution_logs/"
    }
  },
  "file_status": {
    "migrations": {
      "2025-10-23_create_shq_views.sql": "exists",
      "2025-10-23_fix_people_master_column_alias.sql": "exists"
    },
    "scripts": {
      "introspect_neon_to_manifest.cjs": "created_ready",
      "verify_schema_alignment.cjs": "created_ready",
      "generate_firestore_schema.js": "created_ready",
      "neon_to_amplify_schema.js": "created_ready",
      "run_post_fix_verification.cjs": "created_ready"
    }
  },
  "next_steps": [
    "All scripts created and ready for execution",
    "Install dependencies: npm install pg yaml",
    "Set DATABASE_URL environment variable",
    "Execute scripts in order: introspect → verify → generate schemas",
    "Run post-fix verification to validate all outputs",
    "Review generated files in ctb/data/infra/",
    "Optional: Setup Composio for automated task chain execution"
  ]
}
