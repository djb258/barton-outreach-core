# Garage Bay MCP Server Environment Configuration
# Copy this file to .env and fill in your values
# Never commit .env to version control

# ===================================
# REQUIRED: Database Configuration
# ===================================

# Neon PostgreSQL connection string
# Same as API server - ensures data consistency
DATABASE_URL=postgresql://your_user:your_password@ep-example-123456.us-east-1.aws.neon.tech/your_database?sslmode=require&channel_binding=require

# ===================================
# REQUIRED: Composio MCP Configuration
# ===================================

# Composio API key (get from: https://app.composio.dev)
COMPOSIO_API_KEY=your-composio-api-key-here

# Composio base URL (default: https://backend.composio.dev/api)
COMPOSIO_BASE_URL=https://backend.composio.dev/api

# ===================================
# REQUIRED: AI Configuration
# ===================================

# Anthropic API key for Claude AI
ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Claude model to use (default: claude-3-5-sonnet-20241022)
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022

# Max tokens for AI responses
MAX_TOKENS=4096

# ===================================
# REQUIRED: MCP Server Configuration
# ===================================

# MCP server port (default: 8000)
MCP_PORT=8000

# MCP server host
MCP_HOST=0.0.0.0

# Enable MCP server logging
MCP_LOGGING=true

# ===================================
# OPTIONAL: API Integration
# ===================================

# Barton Outreach API URL
API_URL=http://localhost:3000

# API authentication token (if required)
API_TOKEN=your-api-token

# ===================================
# OPTIONAL: Data Enrichment Services
# ===================================

# Apollo.io API key
APOLLO_API_KEY=your-apollo-api-key

# Apify API token
APIFY_API_TOKEN=your-apify-api-token

# LinkedIn scraper actor ID
LINKEDIN_SCRAPER_ACTOR_ID=your-actor-id

# ===================================
# OPTIONAL: Agent Configuration
# ===================================

# Default batch size for data processing
BATCH_SIZE=100

# Maximum concurrent agent executions
MAX_CONCURRENT_AGENTS=5

# Agent execution timeout in seconds
AGENT_TIMEOUT=300

# Retry attempts for failed operations
RETRY_ATTEMPTS=3

# ===================================
# OPTIONAL: Caching Configuration
# ===================================

# Enable result caching
ENABLE_CACHE=true

# Cache TTL in seconds (default: 1800 = 30 minutes)
CACHE_TTL=1800

# Redis URL for distributed caching (optional)
# REDIS_URL=redis://localhost:6379

# ===================================
# OPTIONAL: Monitoring & Logging
# ===================================

# Log level (DEBUG | INFO | WARNING | ERROR)
LOG_LEVEL=INFO

# Log output format (json | text)
LOG_FORMAT=json

# Sentry DSN for error tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Enable performance metrics
ENABLE_METRICS=false

# ===================================
# OPTIONAL: Webhook Configuration
# ===================================

# Webhook URL for agent completion notifications
WEBHOOK_URL=https://your-app.com/webhook

# Webhook secret for signature validation
WEBHOOK_SECRET=your-webhook-secret

# ===================================
# OPTIONAL: Schedule Configuration
# ===================================

# Enable scheduled tasks
ENABLE_SCHEDULER=false

# Cron expression for daily enrichment (default: 2 AM daily)
ENRICHMENT_CRON=0 2 * * *

# Cron expression for weekly cleanup (default: Sunday 3 AM)
CLEANUP_CRON=0 3 * * 0

# ===================================
# Development Only
# ===================================

# Enable debug mode (very verbose logging)
DEBUG=false

# Disable SSL verification (local testing only)
DISABLE_SSL_VERIFY=false

# Mock external API calls for testing
MOCK_EXTERNAL_APIS=false

# Dry run mode (no actual writes to database)
DRY_RUN=false
