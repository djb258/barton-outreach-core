name: CTB Doctrine Enforcement

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Run weekly on Sundays at midnight
    - cron: '0 0 * * 0'
  workflow_dispatch: # Allow manual trigger

jobs:
  ctb-compliance:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Full history for better analysis

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Add any required dependencies here

    - name: Auto-tag new files
      id: autotag
      run: |
        echo "🏷️ Auto-tagging new files..."
        cd ctb/sys/github-factory/scripts

        # Find untagged files in ctb/
        untagged_count=0
        for file in $(find ../../../../ctb -type f \( -name "*.js" -o -name "*.ts" -o -name "*.py" -o -name "*.md" -o -name "*.sql" \) ! -path "*/node_modules/*"); do
          if ! grep -q "Barton ID:" "$file" 2>/dev/null; then
            echo "Tagging: $file"
            python ctb_metadata_tagger.py "$file" 2>/dev/null || true
            untagged_count=$((untagged_count + 1))
          fi
        done

        echo "tagged=$untagged_count" >> $GITHUB_OUTPUT
        echo "✓ Tagged $untagged_count files"

    - name: Run CTB Audit
      id: audit
      run: |
        echo "🔍 Running CTB compliance audit..."
        cd ctb/sys/github-factory/scripts

        # Run audit and capture output
        python ctb_audit_generator.py ../../../../ctb/ > audit_output.txt 2>&1 || true

        # Extract score - try multiple patterns
        score=$(grep -oP "CTB Compliance Score: \K\d+" audit_output.txt 2>/dev/null || \
                grep -oP "Overall: \K\d+" audit_output.txt 2>/dev/null || \
                echo "0")

        grade=$(grep -oP "CTB Compliance Score: \d+/100 \(\K[A-Z]+" audit_output.txt 2>/dev/null || \
                echo "UNKNOWN")

        echo "CTB Compliance Score: $score/100 ($grade)"
        echo "score=$score" >> $GITHUB_OUTPUT
        echo "grade=$grade" >> $GITHUB_OUTPUT

        # Save full output
        cat audit_output.txt

        # Also create markdown version
        echo "# CTB Compliance Audit Report" > audit_report.md
        echo "" >> audit_report.md
        echo "**Date**: $(date)" >> audit_report.md
        echo "**Score**: $score/100" >> audit_report.md
        echo "**Grade**: $grade" >> audit_report.md
        echo "" >> audit_report.md
        echo "## Full Audit Output" >> audit_report.md
        echo "\`\`\`" >> audit_report.md
        cat audit_output.txt >> audit_report.md
        echo "\`\`\`" >> audit_report.md

    - name: Check Compliance Threshold
      id: threshold
      run: |
        score=${{ steps.audit.outputs.score }}
        threshold=70  # Minimum required score

        echo "Score: $score/100"
        echo "Threshold: $threshold/100"

        if [ "$score" -lt "$threshold" ]; then
          echo "status=failed" >> $GITHUB_OUTPUT
          echo ""
          echo "═══════════════════════════════════════════════════════"
          echo "❌ CTB COMPLIANCE CHECK FAILED"
          echo "═══════════════════════════════════════════════════════"
          echo "Current Score: $score/100"
          echo "Required Score: $threshold/100"
          echo ""
          echo "To fix:"
          echo "  1. Run: python ctb/sys/github-factory/scripts/ctb_remediation.py ctb/"
          echo "  2. Review and commit fixes"
          echo "  3. Push changes"
          echo "═══════════════════════════════════════════════════════"
          exit 1
        else
          echo "status=passed" >> $GITHUB_OUTPUT
          echo ""
          echo "═══════════════════════════════════════════════════════"
          echo "✅ CTB COMPLIANCE CHECK PASSED"
          echo "═══════════════════════════════════════════════════════"
          echo "Score: $score/100"
          echo "Grade: ${{ steps.audit.outputs.grade }}"
          echo "═══════════════════════════════════════════════════════"
        fi

    - name: Upload Audit Report
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ctb-audit-report
        path: |
          ctb/sys/github-factory/scripts/audit_output.txt
          ctb/sys/github-factory/scripts/audit_report.md

    - name: Comment on PR
      if: github.event_name == 'pull_request' && always()
      uses: actions/github-script@v6
      with:
        script: |
          const score = ${{ steps.audit.outputs.score }};
          const grade = '${{ steps.audit.outputs.grade }}';
          const tagged = ${{ steps.autotag.outputs.tagged }};
          const threshold = 70;
          const status = score >= threshold ? '✅' : '❌';
          const emoji = score >= 90 ? '🌟' : score >= threshold ? '✅' : '⚠️';

          const body = `## ${emoji} CTB Doctrine Compliance Report

**Score**: ${score}/100
**Grade**: ${grade}
**Threshold**: ${threshold}/100
**Status**: ${status} ${score >= threshold ? 'PASSED' : 'FAILED'}

---

### Details
- **Files Auto-Tagged**: ${tagged}
- **Compliance Status**: ${score >= threshold ? 'All checks passed ✅' : 'Compliance below threshold ❌'}

### ${score >= threshold ? '🎉 Success!' : '⚠️ Action Required'}
${score >= threshold ?
  'All CTB doctrine compliance checks passed. This PR is ready for review.' :
  `This PR does not meet the minimum compliance threshold of ${threshold}/100.

**To fix:**
\`\`\`bash
python ctb/sys/github-factory/scripts/ctb_remediation.py ctb/
git add .
git commit -m "fix: Apply CTB remediation"
git push
\`\`\``
}

---

📊 [View Full Audit Report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });
