{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "title": "Outreach Command Center UI Specification",
  "version": "1.0.0",
  "lastUpdated": "2025-10-24",

  "layout": {
    "header": {
      "title": "Outreach Command Center",
      "subtitle": "Event-Driven Pipeline Monitoring",
      "actions": ["Refresh", "Export", "Settings"]
    },
    "topCards": [
      {
        "phase": "enrichment",
        "label": "Enrichment",
        "icon": "database",
        "color": "#4caf50",
        "metrics": ["total_runs", "error_rate", "avg_duration"]
      },
      {
        "phase": "intelligence",
        "label": "Intelligence (PLE/BIT)",
        "icon": "brain",
        "color": "#ffb300",
        "metrics": ["sniper_targets", "ple_score_avg", "bit_signals"]
      },
      {
        "phase": "messaging",
        "label": "Messaging",
        "icon": "mail",
        "color": "#2196f3",
        "metrics": ["campaigns_active", "messages_sent", "open_rate"]
      },
      {
        "phase": "delivery",
        "label": "Delivery",
        "icon": "send",
        "color": "#9c27b0",
        "metrics": ["delivery_rate", "replies", "meetings_booked"]
      }
    ],
    "tabs": [
      {"id": "enrichment", "label": "Enrichment", "default": true},
      {"id": "intelligence", "label": "Intelligence", "default": false},
      {"id": "messaging", "label": "Messaging", "default": false},
      {"id": "delivery", "label": "Delivery", "default": false}
    ],
    "globalErrorConsole": {
      "position": "bottom",
      "height": "300px",
      "panels": [
        {"id": "neon_errors", "label": "Neon Errors", "source": "neon"},
        {"id": "n8n_errors", "label": "n8n Live Errors", "source": "n8n"}
      ]
    }
  },

  "datasources": {
    "neon": {
      "type": "sql",
      "connectionString": "env:NEON_DATABASE_URL",
      "views": [
        "marketing.v_phase_stats",
        "marketing.v_error_recent",
        "marketing.v_sniper_targets",
        "marketing.v_workflow_health",
        "marketing.v_event_queue_status",
        "marketing.v_daily_throughput"
      ],
      "refreshInterval": 30000
    },
    "n8n": {
      "type": "rest",
      "baseURL": "env:N8N_API_URL",
      "auth": {
        "type": "header",
        "header": "X-N8N-API-KEY",
        "value": "env:N8N_API_KEY"
      },
      "endpoints": {
        "workflows": "/api/v1/workflows",
        "executions": "/api/v1/executions",
        "errors": "/api/v1/executions?status=error",
        "active": "/api/v1/executions?status=running"
      },
      "refreshInterval": 5000
    }
  },

  "bindings": {
    "phaseCards": {
      "query": "SELECT phase, total_runs, errors, error_rate, avg_duration FROM marketing.v_phase_stats WHERE phase = {{phase}};",
      "refresh": "auto"
    },
    "errorTable": {
      "query": "SELECT * FROM marketing.v_error_recent ORDER BY created_at DESC LIMIT 100;",
      "refresh": "auto"
    },
    "sniperTargets": {
      "query": "SELECT * FROM marketing.v_sniper_targets LIMIT 50;",
      "refresh": "manual"
    },
    "workflowHealth": {
      "query": "SELECT * FROM marketing.v_workflow_health;",
      "refresh": "auto"
    },
    "eventQueue": {
      "query": "SELECT * FROM marketing.v_event_queue_status;",
      "refresh": "auto"
    },
    "n8nLiveErrors": {
      "endpoint": "n8n.errors",
      "transform": "response.data.slice(0, 50)",
      "refresh": "auto"
    }
  },

  "components": {
    "PhaseCard": {
      "props": ["phase", "label", "color", "metrics"],
      "template": "card",
      "elements": [
        {"type": "title", "text": "{{label}}"},
        {"type": "metric", "label": "Total Runs", "value": "{{metrics.total_runs}}", "format": "number"},
        {"type": "metric", "label": "Error Rate", "value": "{{metrics.error_rate}}", "format": "percentage", "alert": {"threshold": 5, "color": "red"}},
        {"type": "metric", "label": "Avg Duration", "value": "{{metrics.avg_duration}}", "format": "duration", "unit": "seconds"}
      ]
    },
    "ErrorTable": {
      "props": ["errors"],
      "template": "table",
      "columns": [
        {"field": "event_type", "label": "Event Type", "sortable": true},
        {"field": "record_id", "label": "Record ID", "sortable": true},
        {"field": "error_message", "label": "Error", "truncate": 100},
        {"field": "severity", "label": "Severity", "badge": true},
        {"field": "created_at", "label": "Time", "format": "datetime", "sortable": true}
      ],
      "actions": [
        {"label": "Resolve", "action": "resolveError", "icon": "check"},
        {"label": "View Details", "action": "viewErrorDetails", "icon": "info"}
      ]
    },
    "WorkflowHealthWidget": {
      "props": ["workflows"],
      "template": "status-grid",
      "statusColors": {
        "healthy": "#4caf50",
        "warning": "#ff9800",
        "critical": "#f44336",
        "idle": "#9e9e9e"
      }
    },
    "EventQueueStatus": {
      "props": ["queue"],
      "template": "alert-list",
      "alertRules": [
        {"field": "oldest_age_minutes", "operator": ">", "value": 10, "severity": "warning"},
        {"field": "oldest_age_minutes", "operator": ">", "value": 30, "severity": "critical"}
      ]
    }
  },

  "actions": {
    "retryWorkflow": {
      "type": "http",
      "method": "POST",
      "url": "{{env.N8N_API_URL}}/webhook/{{workflow_name}}",
      "body": {
        "record_id": "{{record_id}}",
        "retry": true
      },
      "confirm": true,
      "confirmMessage": "Retry workflow {{workflow_name}} for record {{record_id}}?"
    },
    "resolveError": {
      "type": "sql",
      "query": "UPDATE marketing.pipeline_errors SET resolved = TRUE, resolved_at = NOW(), resolved_by = '{{user.email}}' WHERE id = {{error_id}};",
      "refresh": ["errorTable"]
    },
    "viewErrorDetails": {
      "type": "modal",
      "component": "ErrorDetailsModal",
      "props": {
        "errorId": "{{error_id}}"
      }
    },
    "exportPhaseReport": {
      "type": "export",
      "format": "csv",
      "query": "SELECT * FROM marketing.v_phase_stats;",
      "filename": "phase_stats_{{timestamp}}.csv"
    }
  },

  "theme": {
    "mode": "light",
    "darkModeToggle": true,
    "colors": {
      "enrichment": "#4caf50",
      "intelligence": "#ffb300",
      "messaging": "#2196f3",
      "delivery": "#9c27b0",
      "error": "#f44336",
      "warning": "#ff9800",
      "success": "#4caf50",
      "info": "#2196f3"
    },
    "typography": {
      "fontFamily": "'Inter', 'Roboto', sans-serif",
      "fontSize": {
        "small": "12px",
        "medium": "14px",
        "large": "16px",
        "xlarge": "20px"
      }
    }
  },

  "alerts": {
    "enabled": true,
    "channels": ["ui", "email", "slack"],
    "rules": [
      {
        "name": "High Error Rate",
        "condition": "error_rate > 10",
        "severity": "critical",
        "message": "Phase {{phase}} has error rate of {{error_rate}}%",
        "channels": ["ui", "slack"]
      },
      {
        "name": "Stuck Events",
        "condition": "oldest_age_minutes > 30",
        "severity": "warning",
        "message": "Events stuck in queue for {{oldest_age_minutes}} minutes",
        "channels": ["ui", "email"]
      },
      {
        "name": "Workflow Timeout",
        "condition": "avg_duration > 300",
        "severity": "warning",
        "message": "Workflow {{workflow_name}} averaging {{avg_duration}}s",
        "channels": ["ui"]
      }
    ]
  },

  "permissions": {
    "roles": {
      "admin": ["view", "edit", "delete", "retry", "export"],
      "operator": ["view", "retry", "export"],
      "viewer": ["view"]
    },
    "default": "viewer"
  },

  "implementation": {
    "framework": "React + TypeScript",
    "uiLibrary": "shadcn/ui + Tailwind CSS",
    "stateManagement": "React Query (for server state) + Zustand (for UI state)",
    "dataVisualization": "Recharts / Tremor",
    "realtime": "PostgreSQL LISTEN/NOTIFY via WebSocket bridge",
    "deployment": "Vercel / Cloudflare Pages",
    "estimatedBuildTime": "2-3 weeks"
  },

  "notes": [
    "UI should be responsive (mobile-first)",
    "Real-time updates via WebSocket for event queue",
    "Poll n8n API every 5 seconds for live errors",
    "Poll Neon views every 30 seconds for stats",
    "Export functionality for reports (CSV, PDF)",
    "Dark mode support with system preference detection",
    "Accessibility: WCAG 2.1 AA compliance"
  ]
}
