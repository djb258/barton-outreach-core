{
  "name": "MillionVerify Checker",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 30
            }
          ]
        }
      },
      "name": "Poll Every 30 Minutes",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT unique_id, email FROM marketing.people_master WHERE email IS NOT NULL AND (email_verified IS NULL OR email_verified = FALSE) ORDER BY created_at DESC LIMIT 10",
        "options": {}
      },
      "name": "Get Unverified Emails",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [450, 300],
      "credentials": {
        "postgres": {
          "id": "{{NEON_CREDENTIAL_ID}}",
          "name": "Neon Marketing DB"
        }
      }
    },
    {
      "parameters": {
        "method": "GET",
        "url": "=https://api.millionverifier.com/api/v3/?api={{$env.MILLIONVERIFY_API_KEY}}&email={{$json[\"email\"]}}",
        "options": {}
      },
      "name": "Verify Email",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json[\"result\"]}}",
              "operation": "equals",
              "value2": "ok"
            }
          ]
        }
      },
      "name": "Check Result",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE marketing.people_master SET email_verified = TRUE, updated_at = NOW() WHERE unique_id = '{{$json[\"unique_id\"]}}'",
        "options": {}
      },
      "name": "Mark as Verified",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1050, 200],
      "credentials": {
        "postgres": {
          "id": "{{NEON_CREDENTIAL_ID}}",
          "name": "Neon Marketing DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE marketing.people_master SET email_verified = FALSE, updated_at = NOW() WHERE unique_id = '{{$json[\"unique_id\"]}}'",
        "options": {}
      },
      "name": "Mark as Invalid",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1050, 400],
      "credentials": {
        "postgres": {
          "id": "{{NEON_CREDENTIAL_ID}}",
          "name": "Neon Marketing DB"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO shq_validation_log (workflow_id, workflow_name, execution_time, record_count, status) VALUES ('RAeFH4CStkDcDAnm', 'MillionVerify Checker', NOW(), 1, 'completed')",
        "options": {}
      },
      "name": "Log Execution",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.4,
      "position": [1250, 300],
      "credentials": {
        "postgres": {
          "id": "{{NEON_CREDENTIAL_ID}}",
          "name": "Neon Marketing DB"
        }
      }
    }
  ],
  "connections": {
    "Poll Every 30 Minutes": {
      "main": [[{"node": "Get Unverified Emails", "type": "main", "index": 0}]]
    },
    "Get Unverified Emails": {
      "main": [[{"node": "Verify Email", "type": "main", "index": 0}]]
    },
    "Verify Email": {
      "main": [[{"node": "Check Result", "type": "main", "index": 0}]]
    },
    "Check Result": {
      "main": [
        [{"node": "Mark as Verified", "type": "main", "index": 0}],
        [{"node": "Mark as Invalid", "type": "main", "index": 0}]
      ]
    },
    "Mark as Verified": {
      "main": [[{"node": "Log Execution", "type": "main", "index": 0}]]
    },
    "Mark as Invalid": {
      "main": [[{"node": "Log Execution", "type": "main", "index": 0}]]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}
