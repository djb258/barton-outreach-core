{
  "name": "WF_Promote_Company",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "promote-company",
        "responseMode": "responseNode",
        "options": {}
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "promote-company"
    },
    {
      "parameters": {
        "functionCode": "const eventData = $input.first().json;\n\nreturn {\n  json: {\n    workflow_name: 'Promote_Company',\n    status: 'ok',\n    triggered_by: 'neon_event',\n    record_id: eventData.payload?.id || eventData.id,\n    event_type: eventData.event_type,\n    company_name: eventData.payload?.company || 'Unknown',\n    website: eventData.payload?.website || '',\n    batch_id: eventData.payload?.import_batch_id || 'UNKNOWN'\n  }\n};"
      },
      "name": "Process Event",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- TODO: Implement Barton ID generation and promotion logic\n-- This is a placeholder\nWITH validated_company AS (\n  SELECT id, company, website, import_batch_id\n  FROM intake.company_raw_intake\n  WHERE id = {{ $json.record_id }}\n    AND validated = TRUE\n)\nINSERT INTO marketing.company_master(\n  company_unique_id,\n  company_name,\n  website_url,\n  import_batch_id,\n  source_system,\n  promoted_from_intake_at,\n  created_at\n)\nSELECT\n  '04.04.01.84.' || LPAD({{ $json.record_id }}::TEXT, 5, '0') || '.001' as company_unique_id,\n  company,\n  website,\n  import_batch_id,\n  'WF_Promote_Company' as source_system,\n  NOW() as promoted_from_intake_at,\n  NOW() as created_at\nFROM validated_company\nON CONFLICT (company_unique_id) DO NOTHING\nRETURNING *;",
        "options": {}
      },
      "name": "Promote to Master",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [650, 300],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "Neon Marketing DB"
        }
      }
    },
    {
      "parameters": {
        "url": "={{ $env.N8N_API_URL }}/webhook/log-to-neon",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {"name": "workflowName", "value": "={{ $json.workflow_name }}"},
            {"name": "status", "value": "={{ $json.status }}"},
            {"name": "triggerSource", "value": "neon_event"},
            {"name": "recordId", "value": "={{ $json.record_id }}"}
          ]
        },
        "options": {}
      },
      "name": "Log Success",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [850, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO marketing.pipeline_errors(event_type, record_id, error_message, created_at)\nVALUES ('{{ $json.event_type }}', '{{ $json.record_id }}', '{{ $json.error?.message || \"Unknown error\" }}', NOW());",
        "options": {}
      },
      "name": "Log Error",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [650, 500],
      "credentials": {
        "postgres": {"id": "1", "name": "Neon Marketing DB"}
      },
      "onError": "continueErrorOutput"
    }
  ],
  "connections": {
    "Webhook": {"main": [[{"node": "Process Event", "type": "main", "index": 0}]]},
    "Process Event": {"main": [[{"node": "Promote to Master", "type": "main", "index": 0}]]},
    "Promote to Master": {"main": [[{"node": "Log Success", "type": "main", "index": 0}]]}
  },
  "settings": {"executionOrder": "v1"}
}
